---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import Projects from "@components/Projects"
import { getLangFromUrl, useTranslations } from "@i18n/utils"
import { ui } from "@i18n/ui"

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get all projects
const allProjects = await getCollection("projects");

// Filter projects by language
const projects = allProjects
  .filter(project => !project.data.draft && project.data.lang === lang)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const tags = [...new Set(projects.flatMap(project => project.data.tags))]
  .sort((a, b) => a.localeCompare(b))

export async function getStaticPaths() {
  return Object.keys(ui).map(locale => ({
    params: { locale }
  }));
}

const { pathname } = Astro.url
---

<PageLayout title={t('projects.title')} description={t('projects.description')}>
  <TopLayout>
    <div class="animate page-heading">
      {t('projects.title')}
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <Projects client:load tags={tags} data={projects} locale={lang} />
    </div>
  </BottomLayout>
</PageLayout>
