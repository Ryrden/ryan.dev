---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import Blog from "@components/Blog"
import { BLOG } from "@consts"
import { getLangFromUrl } from "@i18n/utils"
import { languages } from "@i18n/ui"

const lang = getLangFromUrl(Astro.url);

// Get all blog posts
const allPosts = await getCollection("blog");

// Filter posts by language
const posts = allPosts
  .filter(post => !post.data.draft && post.data.lang === lang)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const tags = [...new Set(posts.flatMap(post => post.data.tags))]
  .sort((a, b) => a.localeCompare(b))

export async function getStaticPaths() {
  return Object.keys(languages).map(locale => ({
    params: { locale }
  }));
}
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading">
      {BLOG.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <Blog client:load tags={tags} data={posts} locale={getLangFromUrl(Astro.url)} />
    </div>
  </BottomLayout>
</PageLayout>


